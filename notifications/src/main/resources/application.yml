server:
  port: 9010
spring:
  application:
    name: notifications
  config:
    import: optional:configserver:http://localhost:8071
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true
  servlet:
    multipart:
      max-file-size: 25MB
      max-request-size: 30MB
  datasource:
    notificationdb:
      url: jdbc:mysql://localhost:3306/forum_notifications
      username: 'root'
      password: '17052002'
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 10
        connection-timeout: 60000
        max-lifetime: 590000
  sql:
    init:
      mode: always
  cloud:
    stream:
      kafka:
        binder:
          brokers:
            - localhost:9092
      bindings:
        sendNotification-out-0:
          destination: event-notification
        listenNotification-in-0:
          destination: event-notification
          group: ${spring.application.name}
        userJoinForum-out-0:
          destination: user-join-forum
        listenUserJoinForum-in-0:
          destination: user-join-forum
          group: ${spring.application.name}
    function:
      definition: listenNotification;listenUserJoinForum

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

springdoc:
  api-docs:
    path: /notifications/api-docs
  swagger-ui:
    path: /notifications/swagger-ui

app:
  cache:
    redis:
      enabled: true
      host: localhost
      port: 6379
      timeoutSeconds: 60
      maxPoolSize: 8
      maxIdle: 8
      minIdle: 0
      password:
  pagination:
    default-size: 10
  scheduled:
    fixedDelay:
      milliseconds: 3600000
  baseUrl: http://localhost:8072/forum
  websocket:
    endpoint: /notifications/ws
    publish: /notifications/app
    subscribe: /notifications/topic
  log:
    request:
      ignoreHeaders: authorization,x-session-id,x-envoy-decorator-operation,X-Request-Id,sessionid,X-User-Id
      extended:
        enabled: true


private:
  route: notifications/delete,notifications/mark,notifications/read,notifications/unread

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram.http.server.requests: true
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
      encoding: json
      connect-timeout: 3s
      read-timeout: 10s

endpoints:
  shutdown:
    enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 200
        permitted-number-of-calls-in-half-open-state: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s

info:
  app:
    name: ${spring.application.name}
    description: "Forum notifications application"
    version: "1.0.0"

logging:
  level:
    com:
      didan:
        forum:
          notifications: debug
  pattern:
    level: "%5p [${spring.application.name},%X{traceId},%X{spanId}]"

minio:
  root:
    user: didannguyen
    password: 17052002
    endpoint: http://localhost:10000
  bucketName: ${spring.application.name}