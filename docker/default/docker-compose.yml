services:
  read:
    image: dannguyenmessi/forum-read-loki:v1
    container_name: read-loki
    ports:
      - 3101:3100
      - 7946
      - 9095
    depends_on:
      - minio-log
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: &loki-dns
      didan:
        aliases:
          - loki

  write:
    image: dannguyenmessi/forum-write-loki:v1
    container_name: write-loki
    ports:
      - 3102:3100
      - 7946
      - 9095
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio-log
    networks:
      <<: *loki-dns

  minio-log:
    image: dannguyenmessi/forum-minio-log:v1
    container_name: minio-log
    ports:
      - 9000
    volumes:
      - ../data/minio-log:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - didan

  grafana:
    image: dannguyenmessi/forum-grafana:v1
    container_name: grafana
    depends_on:
      - gateway
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - didan

  backend:
    image: dannguyenmessi/forum-backend-loki:v1
    container_name: backend-loki
    ports:
      - "3100"
      - "7946"
    depends_on:
      - gateway
    networks:
      - didan

  gateway:
    image: dannguyenmessi/forum-nginx:v1
    container_name: gateway-nginx
    depends_on:
      - read
      - write
    ports:
      - "3100:3100"
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - didan

  prometheus:
    image: dannguyenmessi/forum-prometheus:v1
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - didan

  tempo:
    image: dannguyenmessi/forum-tempo:v1
    container_name: tempo
    ports:
      - "3110:3100" # Tempo
      - "9411:9411" # Zipkin
    networks:
      - didan

  zookeeper:
    image: dannguyenmessi/forum-zookeeper:v1
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - didan

  kafka:
    image: dannguyenmessi/forum-kafka:v1
    container_name: kafka
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "9092:9092"
      - "9997:9997"
    depends_on:
      - zookeeper
    networks:
      - didan

  kafbat-ui:
    container_name: kafbat-ui
    image: dannguyenmessi/forum-kafka-ui:v1
    ports:
      - 8017:8080
    depends_on:
      - kafka
    networks:
      - didan

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ] # Kiểm tra sức khỏe của Redis Server bằng cách gửi lệnh ping
      interval: 10s
      retries: 10
    volumes:
      - ../data/redis:/data
    networks:
      - didan

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: always
    ports:
      - 5540:5540
    volumes:
      - ../data/redis-insight:/data
    networks:
      - didan


  minio:
    image: dannguyenmessi/forum-minio:v1
    container_name: minio
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -k -f http://127.0.0.1:9001/minio/health/live || exit 1" ]
    volumes:
      - "../data/minio/data:/data"
      - "../data/minio/minio:/minio"
      - "../data/minio/config:/root/.minio"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    ports:
      - "10000:9000" # API
      - "10001:9001" # UI
    networks:
      - didan

  keycloakdb:
    image: dannguyenmessi/forum-keycloakdb:v1
    container_name: keycloakdb
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - ../data/keycloakdb:/var/lib/mysql
    networks:
      - didan

  keycloak:
    image: dannguyenmessi/forum-keycloak:v1
    container_name: keycloak
    ports:
      - "7080:8080"
    depends_on:
      keycloakdb:
        condition: service_healthy
    volumes:
      - ../data/keycloak:/opt/keycloak/data/
    networks:
      - didan

  configserver:
    image: dannguyenmessi/forum-configserver:v1
    container_name: configserver
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: configserver
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    networks:
      - didan

  eurekaserver:
    image: dannguyenmessi/forum-eureka-server:v1
    container_name: eureka-server
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: eureka-server
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - didan

  gatewayserver:
    image: dannguyenmessi/forum-gateway-server:v1
    container_name: gateway-server
    ports:
      - "8072:8072"
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: gateway-server
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      OAUTH_OPENID_SERVER: keycloak:8080
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      users-service:
        condition: service_healthy
      posts-service:
        condition: service_healthy
      comments-service:
        condition: service_healthy
      notifications-service:
        condition: service_healthy
    networks:
      - didan

  reports-db:
    image: mysql:8.0
    container_name: reports-db
    ports:
      - "3310:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: reportsdb
      MYSQL_USER: reports
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/reportsdb:/var/lib/mysql
    networks:
      - didan

  users-db:
    image: mysql:8.0
    container_name: users-db
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usersdb
      MYSQL_USER: users
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/usersdb:/var/lib/mysql
    networks:
      - didan

  users-service:
    image: dannguyenmessi/forum-users:v1
    container_name: users-service
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: users
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING_DATASOURCE_USERDB_URL: jdbc:mysql://users-db:3306/usersdb
      SPRING_DATASOURCE_USERDB_USERNAME: users
      SPRING_DATASOURCE_USERSDB_PASSWORD: 17052002
      SPRING_DATASOURCE_REPORTDB_URL: jdbc:mysql://reports-db:3306/reportsdb
      SPRING_DATASOURCE_REPORTDB_USERNAME: reports
      SPRING_DATASOURCE_REPORTDB_PASSWORD: 17052002
      OAUTH_OPENID_SERVER: keycloak:8080
      APP_CACHE_REDIS_ENABLED: true
      APP_CACHE_REDIS_HOST: redis
      APP_CACHE_REDIS_PORT: 6379
      APP_PAGINATION_DEFAULTSIZE: 10
      APP_SCHEDULE_FIXEDDELAY_MILLISECONDS: 300000
      APP_BASEURL: http://gatewayserver:8072/forum
      MINIO_ROOT_USER: didannguyen
      MINIO_ROOT_PASSWORD: 17052002
      MINIO_ROOT_ENDPOINT: http://minio:9000
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      minio:
        condition: service_healthy
      users-db:
        condition: service_healthy
      reports-db:
        condition: service_healthy
    networks:
      - didan

  posts-db:
    image: mysql:8.0
    container_name: posts-db
    ports:
      - "3309:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: postsdb
      MYSQL_USER: posts
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/postsdb:/var/lib/mysql
    networks:
      - didan

  posts-service:
    image: dannguyenmessi/forum-posts:v1
    container_name: posts-service
    ports:
      - "8090:8090"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: posts
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING_DATASOURCE_POSTDB_URL: jdbc:mysql://posts-db:3306/postsdb
      SPRING_DATASOURCE_POSTDB_USERNAME: posts
      SPRING_DATASOURCE_POSTSDB_PASSWORD: 17052002
      SPRING_DATASOURCE_REPORTDB_URL: jdbc:mysql://reports-db:3306/reportsdb
      SPRING_DATASOURCE_REPORTDB_USERNAME: reports
      SPRING_DATASOURCE_REPORTDB_PASSWORD: 17052002
      APP_CACHE_REDIS_ENABLED: true
      APP_CACHE_REDIS_HOST: redis
      APP_CACHE_REDIS_PORT: 6379
      APP_PAGINATION_DEFAULTSIZE: 20
      APP_BASEURL: http://gatewayserver:8072/forum
      MINIO_ROOT_USER: didannguyen
      MINIO_ROOT_PASSWORD: 17052002
      MINIO_ROOT_ENDPOINT: http://minio:9000
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      minio:
        condition: service_healthy
      posts-db:
        condition: service_healthy
      reports-db:
        condition: service_healthy
    networks:
      - didan

  comments-db:
    image: mysql:8.0
    container_name: comments-db
    ports:
      - "3311:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: commentsdb
      MYSQL_USER: comments
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/commentdb:/var/lib/mysql
    networks:
      - didan

  comments-service:
    image: dannguyenmessi/forum-comments:v1
    container_name: comments-service
    ports:
      - "9000:9000"
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: comments
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING_DATASOURCE_COMMENTDB_URL: jdbc:mysql://comments-db:3306/commentsdb
      SPRING_DATASOURCE_COMMENTDB_USERNAME: comments
      SPRING_DATASOURCE_COMMENTDB_PASSWORD: 17052002
      SPRING_DATASOURCE_REPORTDB_URL: jdbc:mysql://reports-db:3306/reportsdb
      SPRING_DATASOURCE_REPORTDB_USERNAME: reports
      SPRING_DATASOURCE_REPORTDB_PASSWORD: 17052002
      APP_CACHE_REDIS_ENABLED: true
      APP_CACHE_REDIS_HOST: redis
      APP_CACHE_REDIS_PORT: 6379
      APP_PAGINATION_DEFAULTSIZE: 20
      APP_BASEURL: http://gatewayserver:8072/forum
      MINIO_ROOT_USER: didannguyen
      MINIO_ROOT_PASSWORD: 17052002
      MINIO_ROOT_ENDPOINT: http://minio:9000
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      minio:
        condition: service_healthy
      comments-db:
        condition: service_healthy
      reports-db:
        condition: service_healthy
    networks:
      - didan

  notifications-db:
    image: mysql:8.0
    container_name: notifications-db
    ports:
      - "3312:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notificationsdb
      MYSQL_USER: notifications
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/notificationsdb:/var/lib/mysql
    networks:
      - didan

  notifications-service:
    image: dannguyenmessi/forum-notifications:v1
    container_name: notifications-service
    ports:
      - "9010:9010"
    healthcheck:
      test: "curl --fail --silent localhost:9010/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: notifications
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING_DATASOURCE_NOTIFICATIONDB_URL: jdbc:mysql://notifications-db:3306/notificationsdb
      SPRING_DATASOURCE_NOTIFICATIONDB_USERNAME: notifications
      SPRING_DATASOURCE_NOTIFICATIONDB_PASSWORD: 17052002
      APP_CACHE_REDIS_ENABLED: true
      APP_CACHE_REDIS_HOST: redis
      APP_CACHE_REDIS_PORT: 6379
      APP_PAGINATION_DEFAULTSIZE: 10
      APP_BASEURL: http://gatewayserver:8072/forum
      MINIO_ROOT_USER: didannguyen
      MINIO_ROOT_PASSWORD: 17052002
      MINIO_ROOT_ENDPOINT: http://minio:9000
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://tempo:9411/api/v2/spans
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      minio:
        condition: service_healthy
      notifications-db:
        condition: service_healthy
    networks:
      - didan

networks:
  didan:
    driver: bridge