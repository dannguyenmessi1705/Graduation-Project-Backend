services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - didan

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - didan

  redis:
    image: "redis"
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ] # Kiểm tra sức khỏe của Redis Server bằng cách gửi lệnh ping
      interval: 10s
      retries: 10
    volumes:
      - ../data/redis:/data
    networks:
      - didan

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -k -f http://127.0.0.1:9001/minio/health/live || exit 1" ]
    volumes:
      - "../data/minio/data:/data"
      - "../data/minio/minio:/minio"
      - "../data/minio/config:/root/.minio"
    environment:
      TZ: Asia/Ho_Chi_Minh
      LANG: en_US.UTF-8
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_ROOT_USER: "didannguyen"
      MINIO_ROOT_PASSWORD: "17052002"
    command: server /data --console-address ':9001'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    ports:
      - "10000:9000" # API
      - "10001:9001" # UI
    networks:
      - didan

  keycloakdb:
    image: mysql:8.0
    container_name: keycloakdb
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloakdb
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/keycloakdb:/var/lib/mysql
    networks:
      - didan

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: keycloak
    command: "start-dev"
    ports:
      - "7080:8080"
    environment:
      KC_HEALTH_ENABLE: true
      KEYCLOAK_ADMIN: didannguyen
      KEYCLOAK_ADMIN_PASSWORD: 17052002
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://keycloakdb:3306/keycloakdb
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 17052002
    depends_on:
      keycloakdb:
        condition: service_healthy
    volumes:
      - ../data/keycloak:/opt/keycloak/data/
    networks:
      - didan

  configserver:
    image: dannguyenmessi/configserver:v1
    container_name: configserver
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: configserver
    networks:
      - didan

  eurekaserver:
    image: dannguyenmessi/eureka-server:v1
    container_name: eureka-server
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: eureka-server
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - didan

  gatewayserver:
    image: dannguyenmessi/gateway-server:v1
    container_name: gatewayserver
    ports:
      - "8072:8072"
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: gatewayserver
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      OAUTH_OPENID_SERVER: keycloak:8080
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      users-service:
        condition: service_healthy
    networks:
      - didan

  users-db:
    image: mysql:8.0
    container_name: users-db
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usersdb
      MYSQL_USER: users
      MYSQL_PASSWORD: 17052002
    volumes:
      - ../data/usersdb:/var/lib/mysql
    networks:
      - didan

  users-service:
    image: dannguyenmessi/users:v1
    container_name: users-service
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      SPRING_APPLICATION_NAME: users
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:mysql://users-db:3306/usersdb
      SPRING_DATASOURCE_USERNAME: users
      SPRING_DATASOURCE_PASSWORD: 17052002
      OAUTH_OPENID_SERVER: keycloak:8080
      APP_CACHE_REDIS_ENABLED: true
      APP_CACHE_REDIS_HOST: redis
      APP_CACHE_REDIS_PORT: 6379
      APP_PAGINATION_DEFAULTSIZE: 10
      APP_SCHEDULE_FIXEDDELAY_MILLISECONDS: 300000
      APP_BASEURL: http://gatewayserver:8072/forum
      MINIO_ROOT_USER: didannguyen
      MINIO_ROOT_PASSWORD: 17052002
      MINIO_ROOT_ENDPOINT: http://minio:9000
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - didan


networks:
  didan:
    driver: bridge